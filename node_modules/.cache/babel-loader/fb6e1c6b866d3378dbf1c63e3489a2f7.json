{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\React\\\\movie_builder\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-30b70-default-rtdb.firebaseio.com/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-30b70-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Could not add movie to database!');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["C:/WorkSpace/React/movie_builder/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst fetchMoviesHandler = useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://react-http-30b70-default-rtdb.firebaseio.com/movies.json'\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Something went wrong!');\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\n\t\t\tconst transformedMovies = data.results.map((movieData) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movieData.episode_id,\n\t\t\t\t\ttitle: movieData.title,\n\t\t\t\t\topeningText: movieData.opening_crawl,\n\t\t\t\t\treleaseDate: movieData.release_date,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchMoviesHandler();\n\t}, [fetchMoviesHandler]);\n\n\tasync function addMovieHandler(movie) {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://react-http-30b70-default-rtdb.firebaseio.com/movies.json',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(movie),\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Could not add movie to database!');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\t}\n\n\tlet content = <p>Found no movies.</p>;\n\n\tif (movies.length > 0) {\n\t\tcontent = <MoviesList movies={movies} />;\n\t}\n\n\tif (error) {\n\t\tcontent = <p>{error}</p>;\n\t}\n\n\tif (isLoading) {\n\t\tcontent = <p>Loading...</p>;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<AddMovie onAddMovie={addMovieHandler} />\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>{content}</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}