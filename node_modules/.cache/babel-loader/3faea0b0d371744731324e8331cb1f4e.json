{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\React\\\\movie_builder\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  /**\n   * GET Movies from Firbase\n   *\n   */\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-30b70-default-rtdb.firebaseio.com/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const allMovies = [];\n\n      for (const key in data) {\n        allMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n\n      setMovies(allMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  /**\n   * Pass movie from the form and post into firebase DB\n   *\n   */\n\n  async function addMovieHandler(movie) {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-30b70-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Could not add movie to database!');\n      }\n\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","console","log","allMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"sources":["C:/WorkSpace/React/movie_builder/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\t/**\n\t * GET Movies from Firbase\n\t *\n\t */\n\n\tconst fetchMoviesHandler = useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://react-http-30b70-default-rtdb.firebaseio.com/movies.json'\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Something went wrong!');\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(data);\n\n\t\t\tconst allMovies = [];\n\n\t\t\tfor (const key in data) {\n\t\t\t\tallMovies.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\ttitle: data[key].title,\n\t\t\t\t\topeningText: data[key].openingText,\n\t\t\t\t\treleaseDate: data[key].releaseDate,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetMovies(allMovies);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchMoviesHandler();\n\t}, [fetchMoviesHandler]);\n\n\t/**\n\t * Pass movie from the form and post into firebase DB\n\t *\n\t */\n\tasync function addMovieHandler(movie) {\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://react-http-30b70-default-rtdb.firebaseio.com/movies.json',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(movie),\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Could not add movie to database!');\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(data);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t\tsetIsLoading(false);\n\t}\n\n\tlet content = <p>Found no movies.</p>;\n\n\tif (movies.length > 0) {\n\t\tcontent = <MoviesList movies={movies} />;\n\t}\n\n\tif (error) {\n\t\tcontent = <p>{error}</p>;\n\t}\n\n\tif (isLoading) {\n\t\tcontent = <p>Loading...</p>;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<AddMovie onAddMovie={addMovieHandler} />\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>{content}</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}